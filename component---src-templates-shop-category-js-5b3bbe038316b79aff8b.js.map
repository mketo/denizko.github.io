{"version":3,"sources":["webpack:///./src/templates/shop/category.js","webpack:///./src/components/shop/product.js","webpack:///./src/components/shop/breadcrumb.js"],"names":["ProductTemplate","data","location","products","allProductsCsv","edges","firstProduct","node","breadcrumb","name","Category","header","image","background","childImageSharp","fluid","src","subTitle","title","description","tags","type","className","items","map","product","index","key","pageQuery","Post","id","Name","to","fields","slug","alt","loading","Image1","Breadcrumb","item","length","url"],"mappings":"6FAEA,0HA8CeA,UAvCS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAWF,EAAKG,eAAeC,MAC/BC,EAAeH,EAAS,GAAGI,KAE3BC,EAAa,CAAC,CAAEC,KAAMH,EAAaI,WACnCC,EAAS,CACdC,MAAOX,EAAKY,WAAWC,gBAAgBC,MAAMC,IAC7CC,SAAU,OACVC,MAAOZ,EAAaI,UAGrB,OACC,kBAAC,IAAD,CAAWC,OAAQA,EAAQT,SAAUA,GACpC,kBAAC,IAAD,CACCiB,YAAgBb,EAAaI,SAAlB,qBACXE,MAAOX,EAAKY,WAAWC,gBAAgBC,MAAMC,IAC7Cd,SAAUA,EACVkB,KAAK,yCACLF,MAAUZ,EAAaI,SAAlB,sBACLW,KAAK,YAEN,yBAAKC,UAAU,aACd,kBAAC,IAAD,CAAYC,MAAOf,IAEnB,yBAAKc,UAAU,gCACbnB,EAASqB,KAAI,SAACC,EAASC,GACvB,OAAO,kBAAC,IAAD,CAASzB,KAAMwB,EAAQlB,KAAMoB,IAAKD,WAexC,IAAME,EAAS,a,oCClDtB,qCA0BeC,IAtBF,SAAC,GAAc,IAAZ5B,EAAW,EAAXA,KACf,OACC,yBAAKqB,UAAU,YACd,yBAAKA,UAAU,uBAAuBK,IAAK1B,EAAK6B,IAC/C,kBAAC,OAAD,CAAMZ,MAAOjB,EAAK8B,KAAMC,GAAI/B,EAAKgC,OAAOC,MACvC,yBACCC,IAAKlC,EAAK8B,KACVT,UAAU,YACVc,QAAQ,OACRpB,IAAKf,EAAKoC,SAEX,0BAAMf,UAAU,SAASrB,EAAK8B,W,iFCyBpBO,IApCI,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACrB,OACC,yBAAKD,UAAU,qBACd,wBAAIA,UAAU,oBACb,wBAAIA,UAAU,mBACb,kBAAC,OAAD,CAAMJ,MAAM,OAAOc,GAAG,SAAtB,SAKAT,EAAMC,KAAI,SAACe,EAAMb,GACjB,OACC,wBACCJ,UAAS,mBACRC,EAAMiB,QAAUd,EAAQ,EAAI,UAAY,IAEzCC,IAAKD,GAEJa,EAAKE,KACL,kBAAC,OAAD,CAAMvB,MAAOqB,EAAK9B,KAAMuB,GAAIO,EAAKE,KAC/BF,EAAK9B,OAGN8B,EAAKE,KAAO,oCAAGF,EAAK9B","file":"component---src-templates-shop-category-js-5b3bbe038316b79aff8b.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Breadcrumb from '../../components/shop/breadcrumb';\nimport Framework from '../../components/framework';\nimport Product from '../../components/shop/product';\nimport SEO from '../../components/framework/seo';\n\nconst ProductTemplate = ({ data, location }) => {\n\tconst products = data.allProductsCsv.edges;\n\tconst firstProduct = products[0].node;\n\n\tconst breadcrumb = [{ name: firstProduct.Category }];\n\tconst header = {\n\t\timage: data.background.childImageSharp.fluid.src,\n\t\tsubTitle: 'Shop',\n\t\ttitle: firstProduct.Category,\n\t};\n\n\treturn (\n\t\t<Framework header={header} location={location}>\n\t\t\t<SEO\n\t\t\t\tdescription={`${firstProduct.Category} designed by Deniz`}\n\t\t\t\timage={data.background.childImageSharp.fluid.src}\n\t\t\t\tlocation={location}\n\t\t\t\ttags=\"denizko, denizko art, clothes, t-shirt\"\n\t\t\t\ttitle={`${firstProduct.Category} | Denizko art shop`}\n\t\t\t\ttype=\"product\"\n\t\t\t/>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Breadcrumb items={breadcrumb} />\n\n\t\t\t\t<div className=\"row row-cols-1 row-cols-md-3\">\n\t\t\t\t\t{products.map((product, index) => {\n\t\t\t\t\t\treturn <Product data={product.node} key={index} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Framework>\n\t);\n};\n\nProductTemplate.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tlocation: PropTypes.object.isRequired,\n};\n\nexport default ProductTemplate;\n\nexport const pageQuery = graphql`\n\tquery ProductsBySlugCategory($slug_category: String!) {\n\t\tallProductsCsv(\n\t\t\tfilter: { fields: { slug_category: { eq: $slug_category } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\t...ProductFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbackground: file(relativePath: { eq: \"shop/background.jpg\" }) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid(maxWidth: 1140) {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Post = ({ data }) => {\n\treturn (\n\t\t<div className=\"col mb-4\">\n\t\t\t<div className=\"mb-5 p-3 text-center\" key={data.id}>\n\t\t\t\t<Link title={data.Name} to={data.fields.slug}>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt={data.Name}\n\t\t\t\t\t\tclassName=\"img-fluid\"\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc={data.Image1}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"small\">{data.Name}</span>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nPost.propTypes = {\n\tdata: PropTypes.object.isRequired,\n};\n\nexport default Post;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Breadcrumb = ({ items }) => {\n\treturn (\n\t\t<nav className=\"d-none d-sm-block\">\n\t\t\t<ol className=\"breadcrumb small\">\n\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t<Link title=\"Shop\" to=\"/shop\">\n\t\t\t\t\t\tShop\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\n\t\t\t\t{items.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`breadcrumb-item${\n\t\t\t\t\t\t\t\titems.length == index + 1 ? ' active' : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.url && (\n\t\t\t\t\t\t\t\t<Link title={item.name} to={item.url}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!item.url && <>{item.name}</>}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ol>\n\t\t</nav>\n\t);\n};\n\nBreadcrumb.propTypes = {\n\titems: PropTypes.array,\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}